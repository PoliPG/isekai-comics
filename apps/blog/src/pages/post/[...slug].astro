---
import BlogPost from '@/layouts/BlogPost'
import Code from '@/components/mdx/Code'
import ListRelatedPosts from '@/components/ListRelatedPosts'
import Share from '@/components/Share'
import TableOfContents from '@/components/TableOfContents'
import SButton from '@/components/mdx/SButton'
import { IocContainer } from 'ioc-container'
import { MessageBus } from 'message-bus'
import types from 'src/types'
import { PostViewCommand } from 'src/Post/Application/post-view/PostViewCommand'
import { PostViewDTO } from 'src/Post/Application/post-view/DTO/PostViewDTO'

export const prerender = false // server
const {slug} = Astro.params

/* */
const command = new PostViewCommand(1)
const container = IocContainer.getInstance()
const commandBus = container.get<MessageBus>(types.CommandBus)
const post = await commandBus.commit<PostViewDTO>(command)

if (!post) {
  return new Response(null, {
    status: 404,
    statusText: 'No encontrado'
  });
}
	
const MAX_POSTS = 3
const getRelatedPosts = (post: any) => {
	return []
}

type Heading = {
	depth: number
	text: string
	slug: string
	subheadings: Heading[]
}


const relatedPosts = getRelatedPosts(post)
const headings: Heading[] = []
---

<BlogPost
	id={post.id}
	data={""}
	headings={headings}
	readTime={"10"}
>
	<div class='grid grid-cols-1 md:grid-cols-[20%_auto] gap-10 mt-8'>
		<!-- aside  -->
		<aside class='md:flex flex-col gap-8 hidden'>
			<Share />
			<div class='sticky top-24 self-start hidden md:block transition-all duration-200'>
				{headings && headings.length > 0 && <TableOfContents {headings} />}
			</div>
		</aside>

		<!-- post -->
		<article class='max-w-full w-full'>
			<div class='prose prose-lg md:prose-xl dark:prose-invert mb-12 min-w-full'>
			</div>

			<!-- related posts -->
			<footer>
				<h2 class='font-bold text-lg dark:text-white mb-6'>Related Posts</h2>
				<ListRelatedPosts posts={relatedPosts} />
			</footer>
		</article>
	</div>
</BlogPost>
