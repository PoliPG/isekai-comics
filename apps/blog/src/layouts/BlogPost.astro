---
import FormattedDate from '@/components/FormattedDate'
import BaseLayout from '@/layouts/BaseLayout'
import Tag from '@/components/Tag'
import type { MarkdownHeading } from 'astro'
import { Image } from 'astro:assets'
import type { PostViewDTO } from '@/Isekai/Post/Application/post-view/DTO/PostViewDTO'

type Props = {
	id: number
	data: PostViewDTO
	headings: MarkdownHeading[]
	readTime: string
}

const { data, readTime, headings, id } = Astro.props
const { title, metaDescription, createdAt, imageUrl } = data
const tags: string[] = []
---

<BaseLayout
	title={title}
	description={metaDescription}
	ogImage={imageUrl}
	articleDate={data.toString()}
>
	<article class='min-w-full sm:max-w-none md:max-w-none'>
		<div class="relative">
		<header class='absolute left-10 bottom-0 z-10 mb-3 flex flex-col justify-center items-center gap-6'>
			<div class=''>
				<h1 class='text-4xl md:text-5xl md:pb-2.5 font-semibold'>
					{title}
				</h1>
				<p class='text-sm text-opacity-50'>
					Publicado <FormattedDate date={createdAt} />
				</p>
			</div>

			<div class='flex flex-wrap justify-center items-center gap-2 gap-y-4 md:gap-5'>
				{tags.map((tag: string) => <Tag tag={tag} />)}
			</div>
		</header>
		<>
			{
				imageUrl && (
					<Image
						src={imageUrl}
						width={1000}
						height={500}
						quality={100}
						format='jpg'
						loading='eager'
						class='w-full max-h-[300px] md:max-h-[500px] bm-8 object-cover'
						alt={`img of ${title}`}
						transition:name={`post-${data.id}`}
					/>
				)
			}
		</>
	    </div>
		<div class="max-w-7xl mx-auto">
			<slot />
		</div>
	</article>
</BaseLayout>
