---
import FormattedDate from '@/components/FormattedDate'
import BaseLayout from '@/layouts/BaseLayout'
import Tag from '@/components/Tag'
import type { MarkdownHeading } from 'astro'
import { Image } from 'astro:assets'
import type { PostViewDTO } from '@/Isekai/Post/Application/post-view/DTO/PostViewDTO'

type Props = {
  id: number
  data: PostViewDTO
  headings: MarkdownHeading[]
  readTime: string
}

const { data, readTime, headings, id } = Astro.props
const { title, metaDescription, createdAt, imageUrl, author } = data
const tags: string[] = [
  'Juegos de mesa',
  'One piece',
  'Mangas',
  'Anime',
  'Merchandising',
]
---

<BaseLayout
  title={title}
  description={metaDescription}
  ogImage={imageUrl}
  articleDate={data.toString()}
>
  <article class="min-w-full sm:max-w-none md:max-w-none">
    <div class="relative">
      <div
        class="absolute transition-all duration-500 inset-0 bg-black bg-opacity-50 z-10"
      >
      </div>
      <header
        class="absolute left-10 bottom-0 z-10 mb-3 flex flex-col justify-center items-center gap-6"
      >
        <div class="text-white">
          <h1 class="text-2xl md:text-4xl uppercase md:pb-2.5 font-extrabold">
            {title}
          </h1>
          <p class="text-sm text-opacity-50">
            Publicado <FormattedDate date={createdAt} />
          </p>
        </div>
      </header>
      <div>
        {
          imageUrl && (
            <Image
              src={imageUrl}
              width={1000}
              height={500}
              quality={100}
              format="jpg"
              loading="eager"
              class="w-full max-h-[300px] md:max-h-[500px] bm-8 object-cover"
              alt={`img of ${title}`}
              transition:name={`post-${data.id}`}
            />
          )
        }
      </div>
    </div>
    <div class="max-w-7xl mx-auto mb-16 font-nunito">
      <slot />
    </div>
    <div id="post-info" class="bg-gray-100 py-16">
      <div class="max-w-7xl mx-auto flex gap-4 justify-center">
        <div
          id="post-info-author"
          class="border-r-2 flex items-center px-8 py-2 gap-4 border-gray-300"
        >
          <figure>
            {
              author.photo && (
                <Image
                  src={author.photo}
                  width={50}
                  height={50}
                  quality={100}
                  format="jpg"
                  loading="eager"
                  class="w-[50px] h-[50px] rounded-full overflow-hidden bm-8 object-cover"
                  alt={`author image of ${title}`}
                />
              )
            }
          </figure>
          <div>
            <p class="font-extrabold">{author.name}</p>
            <p>{author.jobTitle}</p>
          </div>
        </div>
        <div id="post-info-tags" class="mx-8">
          <p class="font-semibold text-sm mb-3 px-1">Etiquetas:</p>
          <div
            class="flex flex-wrap justify-center items-center gap-2 gap-y-4 md:gap-5"
          >
            {tags.map((tag: string) => <Tag tag={tag} />)}
          </div>
        </div>
      </div>
    </div>
  </article>
</BaseLayout>
