# Creating multi-stage build for production
FROM node:18-alpine as base

RUN apk add --no-cache libc6-compat
RUN apk update

# config pnpm
ENV PNPM_HOME="/pnpm"
ENV PATH="$PNPM_HOME:$PATH"
RUN corepack enable

RUN pnpm -g add turbo

ARG NODE_ENV
ENV NODE_ENV=$NODE_ENV

ENV HOST=0.0.0.0

ARG PORT=4321
ENV PORT=$PORT

ARG PUBLIC_URL
ENV PUBLIC_URL=$PUBLIC_URL

ARG APP_KEYS
ENV APP_KEYS=$APP_KEYS

ARG API_TOKEN_SALT
ENV API_TOKEN_SALT=$API_TOKEN_SALT

ARG ADMIN_JWT_SECRET
ENV ADMIN_JWT_SECRET=$ADMIN_JWT_SECRET

ARG TRANSFER_TOKEN_SALT
ENV TRANSFER_TOKEN_SALT=$TRANSFER_TOKEN_SALT

ARG DATABASE_CLIENT
ENV DATABASE_CLIENT=$DATABASE_CLIENT

ARG DATABASE_URL
ENV DATABASE_URL=$DATABASE_URL

ARG JWT_SECRET
ENV JWT_SECRET=$JWT_SECRET
 
 
FROM base AS builder
# Set working directory
WORKDIR /app
COPY . .
RUN turbo prune backend-blog --docker

FROM base as installer
WORKDIR /app
RUN apk update && apk add --no-cache build-base gcc autoconf automake zlib-dev libpng-dev vips-dev git > /dev/null 2>&1
ENV NODE_ENV=production

# First install the dependencies (as they change less often)
COPY .gitignore .gitignore
COPY --from=builder /app/out/json/ .
COPY --from=builder /app/out/pnpm-lock.yaml ./pnpm-lock.yaml
RUN pnpm -g add node-gyp
RUN pnpm config set network-timeout 600000 -g && pnpm install --only=production
ENV PATH /app/node_modules/.bin:$PATH

COPY --from=builder /app/out/full/ .
RUN pnpm turbo run build --filter=backend-blog...

# Creating final production image
FROM base as runner
RUN apk add --no-cache vips-dev

RUN pnpm -g add strapi

WORKDIR /app
USER node

COPY --from=installer --chown=node /app/apps/backend-blog/public ./public
COPY --from=installer --chown=node /app/apps/backend-blog/.strapi ./strapi
COPY --from=installer --chown=node /app/apps/backend-blog/dist ./dist
COPY --from=installer --chown=node /app/apps/backend-blog/package.json ./package.json
COPY --from=installer --chown=node /app/apps/backend-blog/favicon.png ./favicon.png
COPY --from=installer --chown=node /app/node_modules ./node_modules
ENV PATH /app/node_modules/.bin:$PATH

EXPOSE $PORT
CMD ["pnpm", "start"]