name: Build and Deploy to Cloud Run front

on:
  push:
    branches:
      - develop

env:
  PROJECT_ID: ${{secrets.PROJECT_ID}}
  GAR_LOCATION: ${{secrets.GAR_LOCATION}}
  REPOSITORY: ${{secrets.GAR_REPOSITORY}}
  SERVICE: ${{secrets.FRONT_SERVICE}}
  REGION: ${{secrets.GCR_REGION }}
  BACKEND_API_TOKEN: ${{secrets.BACKEND_API_TOKEN }}

jobs:
  deploy:
    name: Deploy front
    permissions:
      contents: 'read'
      id-token: 'write'

    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4

      - name: Google Auth
        id: auth
        uses: 'google-github-actions/auth@v2'
        with:
          credentials_json: '${{ secrets.GCP_CREDENTIALS }}'

      - name: Login to GAR
        uses: docker/login-action@v3
        with:
          registry: ${{ env.GAR_LOCATION }}-docker.pkg.dev
          username: _json_key
          password: ${{ secrets.GCP_CREDENTIALS }}

      - name: Build Container
        run: >
          docker build 
          -t "${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/${{ env.SERVICE }}:${{ github.sha }}"
          --build-arg NODE_ENV=prod
          --build-arg BASE_URL=http://localhost:8080
          --build-arg STRAPI_URL=http://localhost:1337
          --build-arg STRAPI_API_TOKEN=${{env.BACKEND_API_TOKEN}} 
          .
          -f dockerfile.frontend

      - name: Push Container
        run: docker push "${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/${{ env.SERVICE }}:${{ github.sha }}"

      - name: Deploy to Cloud Run
        id: deploy
        uses: google-github-actions/deploy-cloudrun@v2
        with:
          service: ${{ env.SERVICE }}
          region: ${{ env.REGION }}
          image: ${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/${{ env.SERVICE }}:${{ github.sha }}

      - name: Show Output
        run: echo ${{ steps.deploy.outputs.url }}
